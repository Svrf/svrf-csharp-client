/*
 * SVRF API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: api@svrf.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using SVRF.Client.Client;
using SVRF.Client.Api;
using SVRF.Client.Model;

namespace SVRF.Client.Test
{
    /// <summary>
    ///  Class for testing MediaApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class MediaApiTests
    {
        private MediaApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new MediaApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of MediaApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' MediaApi
            //Assert.IsInstanceOfType(typeof(MediaApi), instance, "instance is a MediaApi");
        }

        
        /// <summary>
        /// Test GetById
        /// </summary>
        [Test]
        public void GetByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetById(id);
            //Assert.IsInstanceOf<SingleMediaResponse> (response, "response is SingleMediaResponse");
        }
        
        /// <summary>
        /// Test GetTrending
        /// </summary>
        [Test]
        public void GetTrendingTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<MediaType> type = null;
            //string stereoscopicType = null;
            //string category = null;
            //int? size = null;
            //int? minimumWidth = null;
            //int? pageNum = null;
            //var response = instance.GetTrending(type, stereoscopicType, category, size, minimumWidth, pageNum);
            //Assert.IsInstanceOf<TrendingResponse> (response, "response is TrendingResponse");
        }
        
        /// <summary>
        /// Test Search
        /// </summary>
        [Test]
        public void SearchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string q = null;
            //List<MediaType> type = null;
            //string stereoscopicType = null;
            //string category = null;
            //int? size = null;
            //int? minimumWidth = null;
            //int? pageNum = null;
            //var response = instance.Search(q, type, stereoscopicType, category, size, minimumWidth, pageNum);
            //Assert.IsInstanceOf<SearchMediaResponse> (response, "response is SearchMediaResponse");
        }
        
    }

}
