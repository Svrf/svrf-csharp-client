/*
 * SVRF API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: api@svrf.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = SVRF.Client.Client.SwaggerDateConverter;

namespace SVRF.Client.Model
{
    /// <summary>
    /// PaginationResponse
    /// </summary>
    [DataContract]
    public partial class PaginationResponse :  IEquatable<PaginationResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PaginationResponse" /> class.
        /// </summary>
        /// <param name="NextPageNum">The next page to query to see more results, whether or not the next page actually exists..</param>
        /// <param name="PageNum">The current page number.</param>
        public PaginationResponse(int? NextPageNum = default(int?), int? PageNum = default(int?))
        {
            this.NextPageNum = NextPageNum;
            this.PageNum = PageNum;
        }
        
        /// <summary>
        /// The next page to query to see more results, whether or not the next page actually exists.
        /// </summary>
        /// <value>The next page to query to see more results, whether or not the next page actually exists.</value>
        [DataMember(Name="nextPageNum", EmitDefaultValue=false)]
        public int? NextPageNum { get; set; }

        /// <summary>
        /// The current page number
        /// </summary>
        /// <value>The current page number</value>
        [DataMember(Name="pageNum", EmitDefaultValue=false)]
        public int? PageNum { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PaginationResponse {\n");
            sb.Append("  NextPageNum: ").Append(NextPageNum).Append("\n");
            sb.Append("  PageNum: ").Append(PageNum).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PaginationResponse);
        }

        /// <summary>
        /// Returns true if PaginationResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of PaginationResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PaginationResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.NextPageNum == input.NextPageNum ||
                    (this.NextPageNum != null &&
                    this.NextPageNum.Equals(input.NextPageNum))
                ) && 
                (
                    this.PageNum == input.PageNum ||
                    (this.PageNum != null &&
                    this.PageNum.Equals(input.PageNum))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.NextPageNum != null)
                    hashCode = hashCode * 59 + this.NextPageNum.GetHashCode();
                if (this.PageNum != null)
                    hashCode = hashCode * 59 + this.PageNum.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
